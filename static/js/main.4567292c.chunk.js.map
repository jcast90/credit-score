{"version":3,"sources":["api/index.js","actions/index.js","components/CreditScores.js","components/Accounts.js","components/Reports.js","components/App.js","reducers/index.js","reducers/fetchReports.js","reducers/fetchScores.js","index.js"],"names":["a","fetch","then","resp","json","res","data","fetchScores","dispatch","getState","fetchReports","reports","map","report","score_details","bureau","score","type","payload","_fetchReports","_","memoize","response","CreditScores","this","props","scores","index","TableRow","key","TableCell","Table","TableHead","TableBody","renderScores","Component","connect","state","Accounts","accounts","selectedAccount","setState","renderButtons","length","Object","keys","Grid","item","style","margin","Button","backgroundColor","onClick","variant","color","renderAccounts","account","number","name","balance","prev","next","bureauAccounts","toLowerCase","container","direction","justify","alignItems","Reports","Container","maxWidth","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4567292c.chunk.js","sourcesContent":["export default async () => {\n   const res = await fetch('https://sandbox.sweatpantsclubapps.com/reports').then( resp => resp.json())\n   return res.data[0].data; \n}","import reports from '../api';\nimport _ from 'lodash';\n\nexport const fetchScores = () => async (dispatch, getState) => {\n    await dispatch(fetchReports());\n\n    const reports = getState().reports[0];\n    const resp = reports.map( report => {\n        const { bureau, score } = report.score_details[0];\n        return { bureau, score}\n    })\n\n    dispatch({ type: 'FETCH_SCORES', payload: resp });\n}\n\nexport const fetchReports = () => async dispatch => _fetchReports(dispatch)\n\nconst _fetchReports = _.memoize( async dispatch => {\n    const response = await reports();\n    dispatch({ type: 'FETCH_REPORT', payload: response})\n})\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchScores } from \"../actions\";\nimport { Table, TableBody, TableCell, TableRow, TableHead } from '@material-ui/core';\n\nclass CreditScores extends Component {\n    componentDidMount(){\n        this.props.fetchScores()\n    }\n\n    renderScores(){\n        const data = this.props.scores[0] || [];\n\n       return data.map( (scores,index) => {\n            const { bureau, score } = scores;\n            return (\n                <TableRow key={`${bureau}-${index}`}>\n                    <TableCell>{bureau}</TableCell>\n                    <TableCell>{score}</TableCell>\n                </TableRow>\n            )\n        })\n    }\n\n    render() {\n        \n        return (\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell> Bureau </TableCell>\n                        <TableCell> Score </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {this.renderScores()}\n                </TableBody>\n            </Table>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { scores: state.scores }\n}\n\nexport default connect(mapStateToProps, { fetchScores })(CreditScores);","import React, { Component } from 'react';\nimport { Button, Grid, Table, TableRow, TableHead, TableCell, TableBody } from '@material-ui/core';\n\nclass Accounts extends Component {\n    state = { \n        accounts: [],\n        selectedAccount: 'equifax'\n    }\n\n    componentDidUpdate(prev, next) {\n        if(prev.reports !== this.props.reports){\n            let bureauAccounts = {};\n            this.props.reports.map(account => {\n                const bureau = account.bureau.toLowerCase();\n                return bureauAccounts[bureau] = account.accounts\n            })\n            this.setState({ accounts: [bureauAccounts]})\n        }\n    }\n\n    selectedAccount = (bureau = 'equifax') => {\n        this.setState({ selectedAccount: bureau})\n    }\n\n    renderButtons = () => {\n        if(this.state.accounts.length > 0){\n           const bureauNames = Object.keys(this.state.accounts[0]);\n\n           return bureauNames.map(bureau => {\n               return (\n                    <Grid item key={bureau} style={{margin: \"25px\"}}>\n                        <Button \n                            style={this.state.selectedAccount === bureau ? {backgroundColor: 'red'} : {}}\n                            onClick={() => this.selectedAccount(bureau)} \n                            variant=\"contained\" \n                            color=\"primary\"\n                        >{bureau}</Button>\n                    </Grid>\n                )\n           });\n        }\n\n        return null;\n    }\n\n    renderAccounts = () => {\n        if(this.state.accounts.length > 0){\n            const { accounts, selectedAccount } = this.state;\n\n            return accounts[0][selectedAccount].map( (account, index) => {\n                return (\n                    <TableRow key={`${account.number}-${index}`} >\n                        <TableCell>{account.name}</TableCell>\n                        <TableCell>{account.number}</TableCell>\n                        <TableCell>{selectedAccount === 'equifax' ? account.balance : '-'}</TableCell>\n                        <TableCell>{selectedAccount === 'transunion' ? account.balance : '-'}</TableCell>\n                        <TableCell>{selectedAccount === 'experian' ? account.balance : '-'}</TableCell>\n                    </TableRow>\n                )\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                >\n                    {this.renderButtons()}\n                </Grid>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Account Name</TableCell>\n                            <TableCell>Account Number</TableCell>\n                            <TableCell>Equifax</TableCell>\n                            <TableCell>TransUnion</TableCell>\n                            <TableCell>Experian</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.renderAccounts()}\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default Accounts;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from '@material-ui/core';\nimport { fetchReports, fetchScores } from \"../actions\";\nimport CreditScores from './CreditScores';\nimport Accounts from './Accounts';\n\nclass Reports extends Component {\n    componentDidMount(){\n        this.props.fetchReports();\n    }\n\n    render() {\n        return (\n            <Container maxWidth=\"lg\">\n                <CreditScores />\n                <Accounts reports={this.props.reports} />\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { reports: state.reports[0] }\n}\n\nexport default connect(mapStateToProps, { fetchReports, fetchScores })(Reports);","import React, { Component } from 'react';\nimport { Container } from '@material-ui/core';\nimport Reports from './Reports';\n\nclass App extends Component {\n    render() {\n        return (\n            <Container maxWidth=\"lg\">\n                <Reports />\n            </Container>\n        );\n    }\n}\n\nexport default App;","import { combineReducers } from 'redux';\nimport fetchReports from './fetchReports';\nimport fetchScores from './fetchScores';\n\nexport default combineReducers({\n    reports: fetchReports,\n    scores: fetchScores\n});","export default ( state=[], action) => {\n    switch(action.type){\n        case 'FETCH_REPORT':\n            return [...state, action.payload];\n        default:\n            return state\n    }\n}","export default ( state=[], action) => {\n    switch(action.type){\n        case 'FETCH_SCORES':\n            return [...state, action.payload];\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers'\n\nconst store = createStore(reducers, applyMiddleware(thunk))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root'));"],"sourceRoot":""}